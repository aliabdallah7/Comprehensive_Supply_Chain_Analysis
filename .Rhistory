library(shiny); runApp('src.R')
runApp('src.R')
library(shiny); runApp('src.R')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(shiny); runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
library(shiny); runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
runApp('src.R')
library(shiny); runApp('src.R')
library(shiny); runApp('src.R')
runApp('src.R')
runApp('src.R')
library(shiny); runApp('src.R')
runApp('src.R')
library(shiny); runApp('src.R')
library(shiny); runApp('src.R')
runApp('src.R')
library(tidyverse)
library(lubridate)
library(shiny)
library(shinyjs)
library(plotly)
# Read data
supplychain_data <- read.csv("US_Regional_Sales_Data.csv")
# View the first few rows of the dataset
head(supplychain_data)
#summary
summary(supplychain_data)
# Structure of the Dataset
str(supplychain_data)
# Data preprocessing
#data cleaning and preproccesing
na_count <- sum(is.na(supplychain_data))
# Remove rows with missing values if necessary
supplychain_data <- na.omit(supplychain_data)
# Convert date columns to Date format if needed
supplychain_data$ProcuredDate <- as.Date(supplychain_data$ProcuredDate, format = "%d/%m/%Y")
supplychain_data$OrderDate <- as.Date(supplychain_data$OrderDate, format = "%d/%m/%Y")
supplychain_data$ShipDate <- as.Date(supplychain_data$ShipDate, format = "%d/%m/%Y")
supplychain_data$DeliveryDate <- as.Date(supplychain_data$DeliveryDate, format = "%d/%m/%Y")
# Clear Dollar Sign
supplychain_data$Unit.Cost <- as.numeric(gsub("[\\$,]", "", supplychain_data$Unit.Cost))
supplychain_data$Unit.Price <- as.numeric(gsub("[\\$,]", "", supplychain_data$Unit.Price))
#Rename Columns
supplychain_data <- supplychain_data %>%
rename(
ProductID = X_ProductID,
StoreID = X_StoreID,
CustomerID = X_CustomerID,
SalesTeamID = X_SalesTeamID )
